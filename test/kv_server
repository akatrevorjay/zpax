#!/usr/bin/python
import json
import sys
import os.path

pd = os.path.dirname

this_dir = pd(os.path.abspath(__file__))

sys.path.append( pd(this_dir) )
sys.path.append( os.path.join(pd(pd(this_dir)), 'paxos') )

from zpax import keyval


from twisted.internet import reactor, defer


ids = dict( a = 1, b = 2, c = 3 )
#ids = dict( a = 1, b = 2 )

snode = None

nodes = list()

for uid, i in ids.iteritems():
    pax_rep = 'tcp://127.0.0.1:222{}'.format(i)
    pax_pub = 'tcp://127.0.0.1:333{}'.format(i)
    kv_rep  = 'tcp://127.0.0.1:444{}'.format(i)
    nodes.append( dict(uid          = uid,
                       pax_pub_addr = pax_pub,
                       pax_rep_addr = pax_rep,
                       kv_rep_addr  = kv_rep) )

cfg = dict( nodes=nodes )


def doit():
    global snode
    
    i = sys.argv[1]

    if not i in ids:
        print 'Invalid node uid: ', i
        sys.exit(0)

    snode = keyval.KeyValueDB( i, '/tmp', ':memory:' )

    snode.initialize( json.dumps(cfg) )

            
reactor.callWhenRunning(doit)
reactor.run()


