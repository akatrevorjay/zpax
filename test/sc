#!/usr/bin/python

import sys
import os.path
import json

pd = os.path.dirname

this_dir = pd(os.path.abspath(__file__))

sys.path.append( pd(this_dir) )
sys.path.append( os.path.join(pd(pd(this_dir)), 'paxos') )

from twisted.internet import reactor, defer

from zpax import tzmq


ids = dict( a = 1, b = 2, c = 3 )

node = sys.argv[1]
seq  = sys.argv[2] if len(sys.argv) > 2 else None
val  = sys.argv[3] if len(sys.argv) > 2 else None


def doit():

    r = tzmq.ZmqReqSocket()
    s = tzmq.ZmqSubSocket()

    def recv_req(msg_parts):
        print 'Reply: ', json.loads(msg_parts[0])

    def recv_sub(parts):
        print 'PUB: ', json.loads(parts[1])


    s.subscribe = 'current_value'

    r.messageReceived = recv_req
    s.messageReceived = recv_sub

    r.connect('tcp://localhost:444{}'.format(ids[node]))
    s.connect('tcp://localhost:555{}'.format(ids[node]))

    if val:
        r.send( json.dumps( dict(type='propose_value', instance=int(seq), request_id='rid', proposed_value=val) ) )
    else:
        r.send( json.dumps( dict(type='query_value') ) )

        
reactor.callWhenRunning(doit)
reactor.run()


