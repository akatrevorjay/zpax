#!/usr/bin/python

import sys
import os.path
import json

pd = os.path.dirname

this_dir = pd(os.path.abspath(__file__))

sys.path.append( pd(this_dir) )
sys.path.append( os.path.join(pd(pd(this_dir)), 'paxos') )

import zmq
from zmq.core import constants

import select

from twisted.internet import reactor, defer

from zpax import tzmq


ids = dict( a = 1, b = 2, c = 3 )

node = sys.argv[1]
seq  = sys.argv[2] if len(sys.argv) > 2 else None
val  = sys.argv[3] if len(sys.argv) > 2 else None


def doit():

    s = tzmq.ZmqReqSocket()

    def get():
        s.send( json.dumps( dict(type='get_next_value', sequence_number=99999) ) )

    def recv(msg_parts):
        msg_parts = [str(x) for x in msg_parts]
        print '{}({}): '.format(node, val), msg_parts
        if not val:
            get()
        else:
            reactor.stop()

    s.messageReceived = recv

    s.connect('tcp://localhost:444{}'.format(ids[node]))

    if val:
        s.send( json.dumps( dict(type='propose_value', sequence_number=int(seq), value=val) ) )
    else:
        get()

        
reactor.callWhenRunning(doit)
reactor.run()


