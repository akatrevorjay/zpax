#!/usr/bin/python

import sys
import os.path

pd = os.path.dirname

this_dir = pd(os.path.abspath(__file__))

sys.path.append( pd(this_dir) )
sys.path.append( os.path.join(pd(pd(this_dir)), 'paxos') )

import zmq
from zmq.core import constants

import select

from twisted.internet import reactor, defer

from zpax import tzmq


def straight():
    c = zmq.Context()
    s = c.socket(zmq.SUB)
    
    s.connect('tcp://localhost:5556')
    s.setsockopt(zmq.SUBSCRIBE, 'foo')
    
    while True:
        print s.recv()


def straight2():
    c = zmq.Context()
    s = c.socket(zmq.REQ)
    
    s.connect('tcp://localhost:5556')

    fd = s.getsockopt(constants.FD)

    for x in range(1,10):
        s.send('foo')
        events = s.getsockopt(constants.EVENTS)
        if (events & constants.POLLIN) != constants.POLLIN:
            print 'Blocking!'
            select.select( [fd,],[],[] )
        r = s.recv()
        print 'recv: ', repr(r)


def tz():

    class Sub (tzmq.ZmqSubSocket):

        def messageReceived(self, msg_parts):
            print 'Msg: ', msg_parts

    def doit():
        #s = Sub()
        def recv(msg_parts):
            print 'Recv: ', msg_parts
            
        s = tzmq.ZmqSubSocket()

        s.messageReceived = recv
        
        s.subscribe = 'foo'

        #s.connect('tcp://localhost:5556')
        s.connect('tcp://localhost:3331')
        
    reactor.callWhenRunning(doit)
    reactor.run()

def tz2():

    def doit():

        o = type('foo', (object,), {})()
        o.count = 0
            
        s = tzmq.ZmqReqSocket()

        def recv(msg_parts):
            print 'Recv: ', msg_parts
            o.count += 1
            if o.count < 10:
                s.send(str(o.count))

        s.messageReceived = recv

        s.connect('tcp://localhost:5556')

        s.send('foo')
        
        #p = zmq.Poller()
        #p.register(s._zsock, zmq.POLLIN)
        #x = p.poll()
        #print 'Poll done'
        #print s._zsock.recv_multipart()

        
    reactor.callWhenRunning(doit)
    reactor.run()

#straight2()
#tz2()
tz()

